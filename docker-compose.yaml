version: "3.8"

services:
  # Traefik Proxy
  traefik:
    image: traefik:2.4
    ports:
      - 80:80
      - 443:443
      - 8888:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dockervolumes/traefik/traefik.yml:/etc/traefik/traefik.yml
    links:
      - trello_extension
      - backend_api_service
      - ai_service
      - chat_service
      - frontend
      - neo4j
      - rabbitmq

  neo4j:
    restart: always
    image: neo4j:enterprise
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_heap_initial__size=512M
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_dbms_logs_debug_level=INFO
      - NEO4J_PLUGINS=["apoc","apoc-extended"]
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins

  rabbitmq:
    restart: always
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    volumes:
      - rabbitmq_lib:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
      - ./config_files/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro # Mount custom config

  trello_extension:
    image: node:alpine
    working_dir: /usr/src/app
    ports:
      - "3001:8080"
    volumes:
      - ./codebase/trello-powerup-html:/usr/src/app:ro
    command: npx http-server -p 8080
    labels:
      - "traefik.http.routers.trello.rule=Host(`agreefasttrello.knowyours.co`)"
      - "traefik.enable=true"
      - "traefik.port=3001"
      - "traefik.http.routers.trello.entrypoints=websecure"

  backend_api_service:
    restart: always
    depends_on:
      - rabbitmq
      - ai_service
      - neo4j
    build:
      context: ./codebase/backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - 5500:5500
    labels:
      - "traefik.http.routers.api.rule=Host(`agreefastapi.knowyours.co`)"
      - "traefik.enable=true"
      - "traefik.port=5500"
      - "traefik.http.routers.api.entrypoints=websecure"

  ai_service:
    restart: always
    depends_on:
      - neo4j
      - rabbitmq
    build:
      context: ./codebase/ai_service
      dockerfile: Dockerfile
    env_file:
      - ./.env

  chat_service:
    restart: always
    depends_on:
      - neo4j
      - rabbitmq
    build:
      context: ./codebase/chat_service
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - 6500:6500
    labels:
      - "traefik.http.routers.chat.rule=Host(`agreefastchat.knowyours.co`)"
      - "traefik.enable=true"
      - "traefik.port=6500"
      - "traefik.http.routers.chat.entrypoints=websecure"

  frontend:
    restart: always
    build:
      context: ./codebase/frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    labels:
      - "traefik.http.routers.frontend.rule=Host(`agreefast.knowyours.co`)"
      - "traefik.enable=true"
      - "traefik.port=3000"
      - "traefik.http.routers.frontend.entrypoints=websecure"

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  rabbitmq_log:
  rabbitmq_lib:
